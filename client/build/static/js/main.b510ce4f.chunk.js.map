{"version":3,"sources":["public/rcfmeets.png","Components/ProtectedRoute.js","Components/withWindowDimensions.jsx","Components/Home.js","Middleware/PostMiddleware.js","Components/Post.js","Components/Feed.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProtectedRoute","Component","component","rest","render","props","localStorage","getItem","to","withWindowDimensions","WrappedComponent","state","width","height","updateWindowDimensions","setState","window","innerWidth","innerHeight","this","addEventListener","removeEventListener","windowWidth","windowHeight","isMobileSized","handlePassword","event","password","target","value","handleSubmit","preventDefault","errorPassword","length","localeCompare","setItem","history","push","pathname","Container","className","class","Form","onSubmit","Group","controlId","Control","type","placeholder","onChange","Text","Button","variant","href","Image","src","rcfmeets","Card","axios","post","res","console","log","data","date","firstName","lastName","profileUrl","imageUrl","caption","roundedCircle","Body","renderFeed","currData","map","postData","uniqueId","key","hasMore","slice","splice","newData","concat","PostMiddleware","fetchAllPosts","response","Navbar","bg","dataLength","next","fetchData","bind","fixed","color","isMobiledSized","exact","path","Home","Feed","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b510ce4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rcfmeets.0a98477a.png\";","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom';\n// a protected route will reroute back to the root if your username is not locally stored.\nexport const ProtectedRoute = ({ component: Component, ... rest}) => {\n    return (\n        <Route\n         {...rest }\n         render = {props => {\n             if(localStorage.getItem(\"token\")) {\n                 return <Component {...props} />\n             } else {\n                 return <Redirect to= \"/\" />\n             }\n         }}\n        />\n    )\n}\n\nexport default ProtectedRoute;","import React, { Component } from \"react\";\n\nexport default function withWindowDimensions(WrappedComponent) {\n    return class extends Component {\n        state = { width: 0, height: 0 };\n\n        componentDidMount() {\n            this.updateWindowDimensions();\n            window.addEventListener(\"resize\", this.updateWindowDimensions);\n        }\n\n        componentWillUnmount() {\n            window.removeEventListener(\"resize\", this.updateWindowDimensions);\n        }\n\n        updateWindowDimensions = () => {\n            this.setState({ width: window.innerWidth, height: window.innerHeight });\n        };\n\n        render() {\n            return (\n                <WrappedComponent\n                    {...this.props}\n                    windowWidth={this.state.width}\n                    windowHeight={this.state.height}\n                    isMobileSized={this.state.width < 700}\n                />\n            );\n        }\n    };\n}","import React, {Component} from 'react'\nimport {Image, Container, Form, Button} from 'react-bootstrap'\nimport Card from 'react-bootstrap/Card'\nimport withWindowDimensions from './withWindowDimensions.jsx';\nimport rcfmeets from '../public/rcfmeets.png'\nimport '../public/style/Home.css'\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: '',\n            errorPassword: ''\n        }\n    }\n\n    handlePassword = (event) => {\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        var errorPassword = \"\";\n\n        if (this.state.password.length === 0) {\n            errorPassword = \"The password cannot be blank.\";\n            this.setState({\n                errorPassword: errorPassword\n            })\n        } else if (this.state.password.localeCompare(\"renewal2021\") != 0) {\n            errorPassword = \"Incorrect password. Please try again.\";\n            this.setState({\n                errorPassword: errorPassword\n            })\n        } else {\n            localStorage.setItem(\"token\", \"loggedIn\")\n            this.props.history.push({\n                pathname: '/feed'\n            });\n        }\n    }\n\n    render() {\n        if (this.props.isMobileSized) {\n            return (\n                <div>\n                    <Container className=\"content-container-mobile\">\n                        <div class=\"card-wrapper\">\n                            <div className=\"card-content\">\n                                <h1 class=\"title\">RCFgram</h1>\n                                <h5 class=\"info\">Log in to see ladders meetups <br></br>from other RCFers!</h5>\n                                <Form className=\"login-form\" onSubmit={this.handleSubmit}>\n                                    <Form.Group controlId=\"formBasicPassword\">\n                                        <Form.Control type=\"password\" placeholder=\"Password\" onChange = {this.handlePassword}/>\n                                        <Form.Text className=\"red-text\">\n                                            {this.state.errorPassword}\n                                        </Form.Text> \n                                    </Form.Group>\n                                    <Button className=\"login-button\" variant=\"primary\" type=\"submit\">\n                                        Log In\n                                    </Button>\n                                </Form>\n                            </div>\n                            <div class=\"redirect-text-mobile\">\n                                <div class=\"redirect-one\">\n                                    Don't know the password? Ask <a href=\"https://m.me/matthew24kim\" target=\"_blank\">here!</a>\n                                </div>\n                            </div>\n                        </div>\n                    </Container>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Container className=\"content-container\">\n                        <div class=\"image-wrapper\">\n                            <Image className=\"image\" src={rcfmeets} />\n                        </div>\n                        <div class=\"card-wrapper\">\n                            <Card className=\"login-card\">\n                                <div className=\"card-content\">\n                                    <h1 class=\"title\">RCFgram</h1>\n                                    <h5 class=\"info\">Log in to see ladders meetups <br></br>from other RCFers!</h5>\n                                    <Form className=\"login-form\" onSubmit={this.handleSubmit}>\n                                        <Form.Group controlId=\"formBasicPassword\">\n                                            <Form.Control type=\"password\" placeholder=\"Password\" onChange = {this.handlePassword}/>\n                                            <Form.Text className=\"red-text\">\n                                                {this.state.errorPassword}\n                                            </Form.Text> \n                                        </Form.Group>\n                                        <Button className=\"login-button\" variant=\"primary\" type=\"submit\">\n                                            Log In\n                                        </Button>\n                                    </Form>\n                                </div>\n                            </Card>\n                            <Card className=\"redirect-card\">\n                                <div class=\"redirect-text\">\n                                    <div class=\"redirect-one\">\n                                        Don't know the password? Ask <a href=\"https://m.me/matthew24kim\" target=\"_blank\">here!</a>\n                                    </div>\n                                </div>\n                            </Card>\n                        </div>\n                                        \n                    </Container>\n    \n                        \n                </div>\n            )\n        }\n\n\n        \n    }\n}\n\nexport default withWindowDimensions(Home);","import axios from 'axios'\n\nclass Post {\n    async fetchAllPosts () {\n        const res = await axios.post('/api/fetchposts')\n        console.log(res);\n        return res.data;\n    }\n}\n\nexport default new Post();","import React, {Component} from 'react'\nimport {Card, Image} from 'react-bootstrap'\nimport withWindowDimensions from './withWindowDimensions.jsx';\nimport '../public/style/Post.css'\n\nclass Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: this.props.data.date,\n            firstName: this.props.data.firstName,\n            lastName: this.props.data.lastName,\n            profileUrl: this.props.data.profileUrl,\n            imageUrl: this.props.data.imageUrl,\n            caption: this.props.data.caption\n        }\n      }\n\n    render() {\n        if (this.props.isMobileSized) {\n            return (\n                <div class=\"post-mobile\">\n                    <div class=\"header-mobile\">\n                        <div class=\"profile-image-wrapper\">\n                            <Image className=\"profile-image\" src={this.state.profileUrl} roundedCircle></Image> \n                        </div>  \n                        <div class=\"name\">\n                            <b>{this.state.firstName} {this.state.lastName}</b>\n                        </div>\n                    </div>  \n                    <div class=\"post-image-wrapper-mobile\">\n                        <Image className=\"post-image\" src={this.state.imageUrl} ></Image>\n                    </div>\n                    <div class=\"post-caption-mobile\">\n                        <b>{this.state.firstName} {this.state.lastName}</b> {this.state.caption}\n                    </div>\n                        \n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Card className=\"post-card\">\n                        <Card.Body className=\"card-body\">\n                            <div class=\"header\">\n                                <div class=\"profile-image-wrapper\">\n                                    <Image className=\"profile-image\" src={this.state.profileUrl} roundedCircle></Image> \n                                </div>  \n                                <div class=\"name\">\n                                    <b>{this.state.firstName} {this.state.lastName}</b>\n                                </div>\n                            </div>  \n                            <div class=\"post-image-wrapper\">\n                                <Image className=\"post-image\" src={this.state.imageUrl} ></Image>\n                            </div>\n                            <div class=\"post-caption\">\n                                <b>{this.state.firstName} {this.state.lastName}</b> {this.state.caption}\n                            </div>\n                        </Card.Body>\n                        \n                    </Card>\n                </div>\n            )\n        }\n        \n    }\n\n}\n\nexport default withWindowDimensions(Post);","import React, {Component} from 'react'\nimport {Card, Navbar, Container} from 'react-bootstrap'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport withWindowDimensions from './withWindowDimensions.jsx';\nimport PostMiddleware from '../Middleware/PostMiddleware'\nimport Post from '../Components/Post'\nimport '../public/style/Feed.css'\n\nclass Feed extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data:[],\n            currData:[],\n            hasMore: true\n        }\n    }\n\n    renderFeed = (currData) => {\n        if (currData.length == 0) {\n            return <div class=\"no-posts\">  </div>\n        } else {\n            return currData.map((postData) => {\n                var uniqueId = postData.date;\n                return <Post key={uniqueId} data={postData}/>\n            })\n        }\n    }\n\n    fetchData() {\n        console.log(this.state)\n        if (this.state.data.length == 0) {\n            this.setState({\n                hasMore: false\n            })\n        } else {\n            var slice = this.state.data.slice(0, 8);\n            this.state.data.splice(0, 8);\n            var newData = this.state.currData.concat(slice);\n            this.setState({\n                currData: newData\n            });\n        }\n    }\n\n    async componentDidMount() {\n        var response = await PostMiddleware.fetchAllPosts();\n        console.log(response);\n        this.setState({\n            data: response\n        });\n        var slice = this.state.data.slice(0, 8);\n        this.state.data.splice(0, 8);\n        this.setState({\n            currData: slice\n        })\n        \n    }\n\n    render() {\n        if (this.props.isMobileSized) {\n            return (\n                <div class=\"mobile\">\n                    <Navbar className=\"navbar-feed-mobile\" bg=\"white\">\n                        <div class=\"title-feed\">\n                            RCFgram\n                        </div>\n                    </Navbar>\n                    <div class=\"feed-container-mobile\">\n                        <InfiniteScroll \n                            className=\"infinite\"\n                            dataLength={this.state.currData.length} \n                            next={this.fetchData.bind(this)} \n                            hasMore={this.state.hasMore}>\n                                {this.renderFeed(this.state.currData)}\n                        </InfiniteScroll>                   \n                    </div>  \n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Navbar className=\"navbar-feed\" bg=\"white\">\n                        <div class=\"title-feed\">\n                            RCFgram\n                        </div>\n                    </Navbar>\n                    <div class=\"feed-container\">\n                        <InfiniteScroll \n                            className=\"infinite\"\n                            dataLength={this.state.currData.length} \n                            next={this.fetchData.bind(this)} \n                            hasMore={this.state.hasMore}>\n                                {this.renderFeed(this.state.currData)}\n                        </InfiniteScroll>                   \n                    </div>\n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default withWindowDimensions(Feed);","import React, {Component} from 'react'\nimport {Navbar, Container} from 'react-bootstrap'\nimport withWindowDimensions from './withWindowDimensions.jsx';\nimport '../public/style/Footer.css'\n\nclass Footer extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        if (this.props.isMobileSized) {\n            return(\n                <div className=\"fixed-bottom-mobile\">  \n                    <Navbar fixed=\"bottom\" color=\"light\" className=\"icon-bar\">\n                        <Container className=\"icon-container\">\n                            <div class=\"icons\">\n                                <a href=\"https://www.instagram.com/pennrcf/\" target=\"_blank\">\n                                    <i class=\"fab fa-instagram fa-2x mobile-icon\"></i>\n                                </a>\n                            </div>\n                            <div class=\"icons\">\n                                <a href=\"https://www.facebook.com/pennrcf/\" target=\"_blank\">\n                                    <i class=\"fab fa-facebook-square fa-2x mobile-icon\"></i>\n                                </a>\n                            </div>\n                            <div class=\"icons\">\n                                <a href=\"https://m.me/rcfmeets\" target=\"_blank\">\n                                    <i class=\"fab fa-facebook-messenger fa-2x mobile-icon\"></i>\n                                </a>\n                            </div>\n                        </Container>\n                    </Navbar>\n                </div>\n            )\n        } else {\n            return(\n                <div className=\"fixed-bottom\">  \n                    <Navbar color=\"light\" className=\"icon-bar\">\n                        <Container className=\"icon-container\">\n                            <div class=\"icons\">\n                                <a href=\"https://www.instagram.com/pennrcf/\" target=\"_blank\">\n                                    <i class=\"fab fa-instagram fa-2x\"></i>\n                                </a>\n                            </div>\n                            <div class=\"icons\">\n                                <a href=\"https://www.facebook.com/pennrcf/\" target=\"_blank\">\n                                    <i class=\"fab fa-facebook-square fa-2x\"></i>\n                                </a>\n                            </div>\n                            <div class=\"icons\">\n                                <a href=\"https://m.me/rcfmeets\" target=\"_blank\">\n                                    <i class=\"fab fa-facebook-messenger fa-2x\"></i>\n                                </a>\n                            </div>\n                        </Container>\n                    </Navbar>\n                </div>\n            )\n        }\n    }\n}\n\nexport default withWindowDimensions(Footer);","import React, {Component} from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport ProtectedRoute from './Components/ProtectedRoute'\nimport withWindowDimensions from './Components/withWindowDimensions.jsx';\nimport Home from './Components/Home'\nimport Feed from './Components/Feed'\nimport Footer from './Components/Footer'\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render () {\n    if (this.props.isMobiledSized) {\n      return (\n        <div>\n          <BrowserRouter> \n            <Route exact path = \"/\" component = {Home} />\n            <ProtectedRoute exact path = \"/feed\" component = {Feed} />\n          </BrowserRouter>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <BrowserRouter> \n            <Route exact path = \"/\" component = {Home} />\n            <ProtectedRoute exact path = \"/feed\" component = {Feed} />\n            <Footer />\n          </BrowserRouter>\n        </div>\n      )\n    }\n    \n  }\n} \n\nexport default withWindowDimensions(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
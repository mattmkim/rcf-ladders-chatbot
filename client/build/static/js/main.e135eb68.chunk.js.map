{"version":3,"sources":["public/rcfmeets.png","Components/ProtectedRoute.js","Components/withWindowDimensions.jsx","Components/Home.js","Middleware/PostMiddleware.js","Components/Post.js","Components/Feed.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProtectedRoute","Component","component","rest","render","props","localStorage","getItem","to","withWindowDimensions","WrappedComponent","state","width","height","updateWindowDimensions","setState","window","innerWidth","innerHeight","this","addEventListener","removeEventListener","windowWidth","windowHeight","isMobileSized","handlePassword","event","password","target","value","handleSubmit","preventDefault","errorPassword","length","localeCompare","setItem","history","push","pathname","class","Container","className","Form","onSubmit","Group","controlId","Control","type","placeholder","onChange","Text","Button","variant","href","Image","src","rcfmeets","Card","axios","post","res","console","log","data","date","firstName","lastName","profileUrl","imageUrl","caption","Date","toString","substring","toUpperCase","Body","style","backgroundImage","renderFeed","currData","map","postData","uniqueId","key","hasMore","slice","splice","newData","concat","PostMiddleware","fetchAllPosts","response","Navbar","bg","dataLength","next","fetchData","bind","color","isMobiledSized","exact","path","Home","Feed","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e135eb68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rcfmeets.0a98477a.png\";","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom';\n// a protected route will reroute back to the root if your username is not locally stored.\nexport const ProtectedRoute = ({ component: Component, ... rest}) => {\n    return (\n        <Route\n         {...rest }\n         render = {props => {\n             if(localStorage.getItem(\"token\")) {\n                 return <Component {...props} />\n             } else {\n                 return <Redirect to= \"/\" />\n             }\n         }}\n        />\n    )\n}\n\nexport default ProtectedRoute;","import React, { Component } from \"react\";\n\nexport default function withWindowDimensions(WrappedComponent) {\n    return class extends Component {\n        state = { width: 0, height: 0 };\n\n        componentDidMount() {\n            this.updateWindowDimensions();\n            window.addEventListener(\"resize\", this.updateWindowDimensions);\n        }\n\n        componentWillUnmount() {\n            window.removeEventListener(\"resize\", this.updateWindowDimensions);\n        }\n\n        updateWindowDimensions = () => {\n            this.setState({ width: window.innerWidth, height: window.innerHeight });\n        };\n\n        render() {\n            return (\n                <WrappedComponent\n                    {...this.props}\n                    windowWidth={this.state.width}\n                    windowHeight={this.state.height}\n                    isMobileSized={this.state.width < 700}\n                />\n            );\n        }\n    };\n}","import React, {Component} from 'react'\nimport {Image, Container, Form, Button} from 'react-bootstrap'\nimport Card from 'react-bootstrap/Card'\nimport withWindowDimensions from './withWindowDimensions.jsx';\nimport rcfmeets from '../public/rcfmeets.png'\nimport '../public/style/Home.css'\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: '',\n            errorPassword: ''\n        }\n    }\n\n    handlePassword = (event) => {\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        var errorPassword = \"\";\n\n        if (this.state.password.length === 0) {\n            errorPassword = \"The password cannot be blank.\";\n            this.setState({\n                errorPassword: errorPassword\n            })\n        } else if (this.state.password.localeCompare(\"renewal2021\") != 0) {\n            errorPassword = \"Incorrect password. Please try again.\";\n            this.setState({\n                errorPassword: errorPassword\n            })\n        } else {\n            localStorage.setItem(\"token\", \"loggedIn\")\n            this.props.history.push({\n                pathname: '/feed'\n            });\n        }\n    }\n\n    render() {\n        if (this.props.isMobileSized) {\n            return (\n                <div>\n                    <div class=\"everything-mobile\">\n                        <Container className=\"content-container-mobile\">\n                            <div class=\"card-wrapper\">\n                                <div className=\"card-content\">\n                                    <h1 class=\"title\">RCFgram</h1>\n                                    <h5 class=\"info\">Log in to see ladders meetups <br></br>from other RCFers!</h5>\n                                    <Form className=\"login-form\" onSubmit={this.handleSubmit}>\n                                        <Form.Group controlId=\"formBasicPassword\">\n                                            <Form.Control type=\"password\" placeholder=\"Password\" onChange = {this.handlePassword}/>\n                                            <Form.Text className=\"red-text\">\n                                                {this.state.errorPassword}\n                                            </Form.Text> \n                                        </Form.Group>\n                                        <Button className=\"login-button\" variant=\"primary\" type=\"submit\">\n                                            Log In\n                                        </Button>\n                                    </Form>\n                                </div>\n                                <div class=\"redirect-text-mobile\">\n                                    <div class=\"redirect-one\">\n                                        Don't know the password? Ask <a href=\"https://m.me/matthew24kim\" target=\"_blank\">here!</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </Container>\n                        <Container className=\"verse-container-mobile\">\n                            <div class=\"verse\">\n                                And let us consider how to stir up one another to love and good works, not neglecting to meet together, as is the habit of some, but encouraging one another, \n                                and all the more as you see the Day drawing near. \n                            </div>\n                            <div class=\"verse-2\">\n                                <b>Hebrews 10:24-25</b>\n                            </div>\n                        </Container>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <div class=\"everything\">\n                            <Container className=\"content-container\">\n                                <div class=\"image-wrapper\">\n                                    <Image className=\"image\" src={rcfmeets} />\n                                </div>\n                                <div class=\"card-wrapper\">\n                                    <Card className=\"login-card\">\n                                        <div className=\"card-content\">\n                                            <h1 class=\"title\">RCFgram</h1>\n                                            <h5 class=\"info\">Log in to see ladders meetups <br></br>from other RCFers!</h5>\n                                            <Form className=\"login-form\" onSubmit={this.handleSubmit}>\n                                                <Form.Group controlId=\"formBasicPassword\">\n                                                    <Form.Control type=\"password\" placeholder=\"Password\" onChange = {this.handlePassword}/>\n                                                    <Form.Text className=\"red-text\">\n                                                        {this.state.errorPassword}\n                                                    </Form.Text> \n                                                </Form.Group>\n                                                <Button className=\"login-button\" variant=\"primary\" type=\"submit\">\n                                                    Log In\n                                                </Button>\n                                            </Form>\n                                        </div>\n                                    </Card>\n                                    <Card className=\"redirect-card\">\n                                        <div class=\"redirect-text\">\n                                            <div class=\"redirect-one\">\n                                                Don't know the password? Ask <a href=\"https://m.me/matthew24kim\" target=\"_blank\">here!</a>\n                                            </div>\n                                        </div>\n                                    </Card>\n                                </div>       \n                            </Container>\n                            <Container className=\"verse-container\">\n                                <div class=\"verse\">\n                                    And let us consider how to stir up one another to love and good works, not neglecting to meet together, as is the habit of some, but encouraging one another, \n                                    and all the more as you see the Day drawing near. \n                                </div>\n                                <div class=\"verse-2\">\n                                    <b>Hebrews 10:24-25</b>\n                                </div>\n                            </Container>\n                    </div>\n                </div>\n            )\n        }\n\n\n        \n    }\n}\n\nexport default withWindowDimensions(Home);","import axios from 'axios'\n\nclass Post {\n    async fetchAllPosts () {\n        const res = await axios.post('/api/fetchposts')\n        console.log(res);\n        return res.data;\n    }\n}\n\nexport default new Post();","import React, {Component} from 'react'\nimport {Card, Image} from 'react-bootstrap'\nimport withWindowDimensions from './withWindowDimensions.jsx';\nimport '../public/style/Post.css'\n\nclass Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: this.props.data.date,\n            firstName: this.props.data.firstName,\n            lastName: this.props.data.lastName,\n            profileUrl: this.props.data.profileUrl,\n            imageUrl: this.props.data.imageUrl,\n            caption: this.props.data.caption,\n        }\n    }\n\n    render() {\n        \n        if (this.props.isMobileSized) {\n            var date = new Date(this.state.date);\n            return (\n                <div class=\"post-mobile\">\n                    <div class=\"header-mobile\">\n                        <div class=\"profile-image-wrapper\">\n                            <Image className=\"profile-image\" src={this.state.profileUrl}></Image> \n                        </div>  \n                        <div class=\"name\">\n                            <b>{this.state.firstName} {this.state.lastName}</b>\n                        </div>\n                    </div>  \n                    <div class=\"post-image-wrapper-mobile\">\n                        <Image className=\"post-image\" src={this.state.imageUrl} ></Image>\n                    </div>\n                    <div class=\"post-caption-mobile\">\n                        <b>{this.state.firstName} {this.state.lastName}</b> {this.state.caption}\n                    </div>    \n                    <div class=\"post-date\">\n                        {date.toString().substring(0, 15).toUpperCase()}\n                    </div>\n                </div>\n            )\n        } else {\n            var date = new Date(this.state.date);\n            return (\n                <div>\n                    <Card className=\"post-card\">\n                        <Card.Body className=\"card-body\">\n                            <div class=\"header\">\n                                <div class=\"profile-image-wrapper\" style={{backgroundImage: \"url(\" + this.state.profileUrl + \")\"}}>\n                                </div>  \n                                <div class=\"name\">\n                                    <b>{this.state.firstName} {this.state.lastName}</b>\n                                </div>\n                            </div>  \n                            <div class=\"post-image-wrapper\">\n                                <Image className=\"post-image\" src={this.state.imageUrl} ></Image>\n                            </div>\n                            <div class=\"post-caption\">\n                                <b>{this.state.firstName} {this.state.lastName}</b> {this.state.caption}\n                            </div>\n                            <div class=\"post-date\">\n                                {date.toString().substring(0, 15).toUpperCase()}\n                            </div>\n                        </Card.Body>\n                        \n                    </Card>\n                </div>\n            )\n        }\n        \n    }\n\n}\n\nexport default withWindowDimensions(Post);","import React, {Component} from 'react'\nimport {Card, Navbar, Container} from 'react-bootstrap'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport withWindowDimensions from './withWindowDimensions.jsx';\nimport PostMiddleware from '../Middleware/PostMiddleware'\nimport Post from '../Components/Post'\nimport '../public/style/Feed.css'\n\nclass Feed extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data:[],\n            currData:[],\n            hasMore: true\n        }\n    }\n\n    renderFeed = (currData) => {\n        if (currData.length == 0) {\n            return <div class=\"no-posts\">  </div>\n        } else {\n            return currData.map((postData) => {\n                var uniqueId = postData.date;\n                return <Post key={uniqueId} data={postData}/>\n            })\n        }\n    }\n\n    fetchData() {\n        console.log(this.state)\n        if (this.state.data.length == 0) {\n            this.setState({\n                hasMore: false\n            })\n        } else {\n            var slice = this.state.data.slice(0, 8);\n            this.state.data.splice(0, 8);\n            var newData = this.state.currData.concat(slice);\n            this.setState({\n                currData: newData\n            });\n        }\n    }\n\n    async componentDidMount() {\n        var response = await PostMiddleware.fetchAllPosts();\n        console.log(response);\n        this.setState({\n            data: response\n        });\n        var slice = this.state.data.slice(0, 8);\n        this.state.data.splice(0, 8);\n        this.setState({\n            currData: slice\n        })\n        \n    }\n\n    render() {\n        if (this.props.isMobileSized) {\n            return (\n                <div class=\"mobile\">\n                    <Navbar className=\"navbar-feed-mobile\" bg=\"white\">\n                        <div class=\"title-feed\">\n                            RCFgram\n                        </div>\n                    </Navbar>\n                    <div class=\"feed-container-mobile\">\n                        <InfiniteScroll \n                            className=\"infinite\"\n                            dataLength={this.state.currData.length} \n                            next={this.fetchData.bind(this)} \n                            hasMore={this.state.hasMore}>\n                                {this.renderFeed(this.state.currData)}\n                        </InfiniteScroll>                   \n                    </div>  \n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Navbar className=\"navbar-feed\" bg=\"white\">\n                        <div class=\"title-feed\">\n                            RCFgram\n                        </div>\n                    </Navbar>\n                    <div class=\"feed-container\">\n                        <InfiniteScroll \n                            className=\"infinite\"\n                            dataLength={this.state.currData.length} \n                            next={this.fetchData.bind(this)} \n                            hasMore={this.state.hasMore}>\n                                {this.renderFeed(this.state.currData)}\n                        </InfiniteScroll>                   \n                    </div>\n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default withWindowDimensions(Feed);","import React, {Component} from 'react'\nimport {Navbar, Container} from 'react-bootstrap'\nimport withWindowDimensions from './withWindowDimensions.jsx';\nimport '../public/style/Footer.css'\n\nclass Footer extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        if (this.props.isMobileSized) {\n            return(\n                <div></div>\n            )\n        } else {\n            return(\n                <div className=\"fixed-bottom\">  \n                    <Navbar color=\"light\" className=\"icon-bar\">\n                        <Container className=\"icon-container\">\n                            <div class=\"icons\">\n                                <a href=\"https://www.instagram.com/pennrcf/\" target=\"_blank\">\n                                    <i class=\"fab fa-instagram fa-2x\"></i>\n                                </a>\n                            </div>\n                            <div class=\"icons\">\n                                <a href=\"https://www.facebook.com/pennrcf/\" target=\"_blank\">\n                                    <i class=\"fab fa-facebook-square fa-2x\"></i>\n                                </a>\n                            </div>\n                            <div class=\"icons\">\n                                <a href=\"https://m.me/rcfmeets\" target=\"_blank\">\n                                    <i class=\"fab fa-facebook-messenger fa-2x\"></i>\n                                </a>\n                            </div>\n                        </Container>\n                    </Navbar>\n                </div>\n            )\n        }\n    }\n}\n\nexport default withWindowDimensions(Footer);","import React, {Component} from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport ProtectedRoute from './Components/ProtectedRoute'\nimport withWindowDimensions from './Components/withWindowDimensions.jsx';\nimport Home from './Components/Home'\nimport Feed from './Components/Feed'\nimport Footer from './Components/Footer'\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render () {\n    if (this.props.isMobiledSized) {\n      return (\n        <div>\n          <BrowserRouter> \n            <Route exact path = \"/\" component = {Home} />\n            <ProtectedRoute exact path = \"/feed\" component = {Feed} />\n          </BrowserRouter>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <BrowserRouter> \n            <Route exact path = \"/\" component = {Home} />\n            <ProtectedRoute exact path = \"/feed\" component = {Feed} />\n          </BrowserRouter>\n          <Footer />\n        </div>\n      )\n    }\n    \n  }\n} \n\nexport default withWindowDimensions(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}